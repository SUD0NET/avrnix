#########################################################################
#  Makefile for AVR atmega328p version of the AVRnix operating system	  #
#########################################################################

COMPILER_ROOT	=	avr-
PNAME		=	ATMEGA328P
PLAT		=	Platform_$(PNAME)
TOPDIR		=	..

CC		=	${COMPILER_ROOT}gcc
LD		=	${COMPILER_ROOT}gcc
TEST 		=	gcc
OBJCOPY		=	${COMPILER_ROOT}objcopy
OBJDUMP		=	${COMPILER_ROOT}objdump
AVRNIX		=	$(TOPDIR)/compile/avrnix.elf
AVRBIN		=	$(TOPDIR)/compile/avrnix.bin
AVRHEX		=	$(TOPDIR)/compile/avrnix.hex
BUILDMAKE	=	$(TOPDIR)/compile/bin/build-make
MKVERS		=	$(TOPDIR)/compile/bin/mkvers
QEMU      = qemu-system-avr

MAKEDEP		=	$(CC) -M -MG

DEPSFILE	=	.deps
DEFSFILE	=	.defs
VERSIONFILE	=	version
LDSCRIPT	=	ld.script
MKVERS		=	$(TOPDIR)/compile/bin/mkvers

REBUILDFLAGS	=	-s $(TOPDIR)/system   	\
			-s $(TOPDIR)/lib			\
			-s $(TOPDIR)/device/nam			\
			-s $(TOPDIR)/device/tty			\
			-s $(TOPDIR)/main  

INCLUDE		=	-I$(TOPDIR)/include
DEFS		= 	-DVERSION=\""AVRnix Version 1.0 \0"\"

# Compiler flags
CFLAGS  = -DF_CPU=16000000UL -mmcu=atmega328p  -fno-builtin -c -Wall -Os ${DEFS} ${INCLUDE}

CFLAGS += -Wl,-static
CFLAGS += -ffunction-sections
CFLAGS += -fdata-sections
CFLAGS += -Wl,--gc-sections
CFLAGS += -mcall-prologues 
CFLAGS += -mrelax

SFLAGS  = ${INCLUDE}

# Loader flags

LDFLAGS = -mmcu=atmega328p -Wl,-Map,avrnix.map -lm -Wl,--gc-sections -mrelax


all:	avrnix

#--------------------------------------------------------------------------------
# Handle generation of a new version string when initialize is recompiled
#--------------------------------------------------------------------------------

newversion:
	@echo creating new version
	@$(MKVERS) $(PNAME) > version

#--------------------------------------------------------------------------------
# Include generic make targets and rules from the file generated by build-make
#--------------------------------------------------------------------------------
-include $(DEFSFILE)

#--------------------------------------------------------------------------------
# Add files that require special rules and place start.o at the front
#--------------------------------------------------------------------------------
LD_LIST = binaries/start.o $(filter-out binaries/start.o,$(OBJ_FILES))
# LD_LIST = $(filter-out binaries/start.o,$(OBJ_FILES))

#------------------------------------------------------------
# Rules for files that need special handling
#------------------------------------------------------------

# Define variables for the Configuration file and generated files

CONFFILE	= $(TOPDIR)/config/Configuration
CONFH		= $(TOPDIR)/include/conf.h
CONFC		= $(TOPDIR)/system/conf.c

# Define variables for the config program and its sources

CONFPGM		= $(TOPDIR)/config/config
CONFL		= $(TOPDIR)/config/config.l
CONFY		= $(TOPDIR)/config/config.y

# Set up the required build directory structure

BLDDIRS	= binaries
export

#--------------------------------------------------------------------------------
# Specific additional rules and exceptions
#--------------------------------------------------------------------------------

avrnix:	Makefile rebuild $(BLDDIRS) $(DEFSFILE) $(DEPSFILE) $(CONFH) $(CONFC) $(LD_LIST)
	@echo;echo 'Loading object files to produce avrnix'
	@$(LD) $(LDFLAGS) $(LD_LIST) -o $(AVRNIX) 
	@echo "Creating Binary..."
	@$(OBJCOPY) -O binary $(AVRNIX) $(AVRBIN)

examine-all:
	$(OBJDUMP) -D $(AVRNIX) | less

examine-header:
	$(OBJDUMP) -x $(AVRNIX) | less

flash:
	avr-objcopy -O ihex -R .eeprom $(AVRNIX) $(AVRHEX)
	avrdude -p atmega328p -c arduino -P `ls -1 /dev/ttyUSB* /dev/ttyACM* 2>/dev/null | head -1` -b 115200 -D -U flash:w:$(AVRHEX):i 


qemu:
	$(QEMU) -M uno -bios $(AVRNIX) 

$(BLDDIRS): 
	@mkdir -p $(BLDDIRS)

objects: $(LD_LIST)

$(CONFH): $(CONFFILE) $(CONFPGM)
	@echo making $(CONFH)
	@make configure

$(CONFC): $(CONFFILE) $(CONFPGM)
	@echo making $(CONFC)
	@make configure

$(CONFPGM): $(CONFL) $(CONFY)
	@echo making the config program
	@make -C $(TOPDIR)/config clean all install

configure:
	@echo forcing a rebuild of conf.h and conf.c
	@make newversion
	@(cd $(TOPDIR)/config; make install)

clean:
	@echo removing .o files
	@rm -f ${LD_LIST}
	@echo   removing configuration files ...
	@rm -f $(CONFH) $(CONFC)
	@(cd $(TOPDIR)/config; make clean)
	@echo removing avrnix ...
	@rm -f $(AVRNIX)
	@rm -f $(AVRBIN)

#--------------------------------------------------------------------------------
# Locations of source directories and exceptions (.c and .[sS] files to exclude)
#--------------------------------------------------------------------------------
	
$(DEFSFILE):
	@rm -f $(DEFSFILE)
	@echo "" > $(DEFSFILE)
	@make rebuild

$(DEPSFILE):
	@rm -f $(DEPSFILE)
	@echo "" > $(DEPSFILE)
	@make depend

rebuild: $(CONFC)
	@echo Rebuilding the $(DEFSFILE) file
	@$(BUILDMAKE) $(REBUILDFLAGS) > $(DEFSFILE)

defclean:
	rm -f $(DEFSFILE)
	echo "" > $(DEFSFILE)

depend: $(DEFSFILE)
	@echo;echo Making all dependencies in $(DEPSFILE)
	@$(MAKEDEP) ${INCLUDE} ${SRC_FULL} > $(DEPSFILE)
	@echo;echo Finished making dependencies

depclean:
	rm -f $(DEPSFILE)
	echo "" > $(DEPSFILE)

-include $(DEPSFILE)
